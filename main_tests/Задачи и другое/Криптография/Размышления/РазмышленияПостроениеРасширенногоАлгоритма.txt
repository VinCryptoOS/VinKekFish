Интуитивно размышляем насчёт алгоритма с повышенной длиной ключа

1. Чтобы построить расширенный алгоритм, желательно обеспечить
	Многопоточность
	Возможность блоков эффективно обмениваться друг с другом информацией
	Некоторая доп. стойкость
	Вопрос насчёт использования большого объёма памяти со случайным доступом остаётся открытым



Обмен блоков информацией
	Интуитивно, каждый блок должен обмениваться с каждым, то есть квадратичная сложность.
	Если каждый блок представить алгоритмом keccak, то можно было бы сказать, что keccak должен передать входной блок каждому другому блоку, а тот должен этот блок принять
	Пусть у нас везде нули и только на одном блоке установлен один бит. Этот бит должен распространиться, причём дав разные фрагменты общего состояния. Это касается даже случаев, когда мы явно обеспечиваем отсутствие такой ситуации (где всё - нули)
	Как знать, что этот бит не будет "поглощён" другими битами. С одной стороны, бит, наверное, будет и через многократные преобразования влиять на каждый бит результата. С другой стороны, при многократных преобразованиях можно интуитивно считать, что биты "поглощаются". Так, если взять совсем простой хеш и многократно его прохешировать, когда-то он случайно придёт к первоначальному состоянию. Правда, когда именно - это тоже случайность. Длина этой цепочки - тоже информация.
	Если бит влияет на другой бит с вероятностью 1/2, то это значит, вероятность того, что этот бит не повлиял ни на какой другой составляет 1/2^n. То есть для n битов будет потеряно n/2^n битов. Для 16 битов это будет 16/2^16=1/4096. Для 32 битов это будет 32/2^32=1/134217728.
	Приблизительно, можно считать, что для L шагов преобразований, будет потеряно L*n/2^n.
	Таким образом, L*n должно быть существенно меньше, чем 2^n. Оно всегда так.
	Для входа в 2*n битов можно считать, что биты на выходе n битов представлены с вероятностью 1/2.
	Значит, для n преобразований вероятность будет 1/2^n, то есть для уверенного распространения бита нужно будет повторить цепочку операций 2^n раз (каждый раз с новой подачей этого бита в цепочку операций).

	
