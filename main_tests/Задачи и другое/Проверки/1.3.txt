Выписка из "АлгоритмыПроверки.txt"

1.3. Выписать в отдельный файл в корень, что именно проверяется на этом этапе
	1. Состояния объектов. Верно ли они используются (в том числе, запись в удалённый объект)
	2. Выход за пределы границ объектов
	3. Документация ввода-вывода
	4. Работа с разными уровнями конфиденциальности и их ввод-вывод
	5. Для тайминг-атак: отсутствие условий, зависящих от высоких уровней конфиденциальности.
	6. Наличие лишних функций, которые не используются
	7. Правильная работа с копиями объектов (их верное обнуление и освобождение, в том числе)


В копии исходного кода писать анализ. Если нужна ссылка на строку исходного кода, делать её по неизменяемой копии оригинала (в папке sources)


1. Проверить наличие документации по вводу-выводу (сеть, диск, межпроцессные взаимодействия, в том числе, именованные мьютексы, как функции, через которые могут проводиться тайминг-атаки

2. Проверить, что в документации указаны уровни конфиденциальности выводимой информации
2.1. Любой ввод-вывод указан в документации и помечен уникальной меткой
2.2. Уровень конфиденциальности указан

3. Проверить, что состояния объектов где-то документированы и ссылка на документацию указана в исходниках
	1. Обратить особое внимание на то, что у объектов есть состояния "не инициализирован" и "освобождён"
	2. Обратить особое внимание на то, указан ли допустимый порядок использования объекта и рекомендованный порядок состояний.

4. Начать со входа в программу.

Все объекты, которые инициализируются, в том числе, в статических конструкторах, проверить на верность инициализации и указать в начале программы, какие объекты в каком состоянии.

На каждую строчку инициализаторов и программы:
0. Состояния объектов
	0. В начале программы и каждого статического и обычного конструктора: в каком состоянии находятся сейчас проинициализированные статически объекты (у тех, у которых много состояний)
		В частности, указатель или ссылка на объект не нулевые? Не освобождены?
	1. В каком состоянии сейчас находятся используемые в данной строке объекты?
	2. Производится ли запись в объект (возможно, где-то внутри)? Если да, то разрешена ли эта запись?
	3. Производится ли чтение? Если да, то разрешено ли оно?
	4. Производятся ли другие операции с объектом? Разрешены ли они?
	5. Если производится копирование объекта или ссылки, то пометить, что объект имеет копии или копии ссылки
	6. Полное ли копирование производится? Всё ли верно?
	7. Все ли созданные объекты переходят в состояние "очищены"?
	8. Все ли созданные объекты проходят полный допустимый или рекомендуемый цикл состояний?
1. Уровень конфиденциальности
	1. Какой уровень у объектов, используемых в данной строке?
	2. Нет ли вывода в более низкий уровень?
	3. Нет ли записи туда, куда нельзя записывать?
	4. Нет ли других запрещённых действий или изменений состояния
2. Выход за пределы объектов (если объект индекцируемый)
	2.1. Каков размер объекта? (или допустимый диапазон индексов, если это не массив)
	2.2. Обеспечены ли значения индексов в нужном диапазоне?
	2.3. Если есть условия на ввод, описаны ли они в документации или как проверки в коде?
3. Тайминг-атаки
	3.1. В условных операторах (в т.ч. циклах) участвует информация с высоким уровнем конфиденциальности?
4. Пометить функции, как используемые
5. Ввод-вывод
	1. Нет ли ввода-вывода? Если да, разрешён ли он (в соответствии с установленным уровнем конфиденциальности)
	2. Документирован ли ввод-вывод?
	3. Помечен ли ввод-вывод отдельной уникальной меткой, соответствующей метке в документации?
	4. При записи или чтении из объектов пометить их уровень конфиденциальности
