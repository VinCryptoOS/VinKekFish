0. Копирование проверяемых проектов
0.0. Создать директорию для копирования, аналогично 20210505 (дата копирования)
0.1. Скопировать все данные в отдельную директорию "sources" (это - неизменяемые копии оригиналов).
0.2. Написать сопроводительный файл "-.txt", что именно будет проверятся. Скопировать туда файлы "Проверки.txt" и "АлгоритмыПроверки.txt" и указать в них, что это - копии, и какого именно числа они скопированны


1. Проверка на правильные состояния объектов и выход за пределы массива, тайминг-атаки и т.п.

1.1. Если необходимо, пометить в оригинальных исходниках следующее:
	1. Какие есть состояния объектов? Например: непроинициализирован, проинициализирован и т.п.
	2. Как эти состояния отличить друг от друга в программе?
	3. В каких состояниях какому использованию подлежит объект?
	4. Проверить, понятно ли описано, как создавать, использовать и утилизировать объект
	5. Проверить, понятно ли описаны специфические для класса правила ручной проверки (вот как здесь)
	6. Если что-то изменено, начать с пункта 0 заново (в т.ч., можно именовать папки, 20210505-1713)

1.2. Скопировать все данные из sources в новую директорию
	1. Пометить в сопроводительном файле "-.txt", для чего создаётся новая директория (пункт 1.2 Алгоритмов проверки)

1.3. Выписать в отдельный файл в корень, что именно проверяется на этом этапе
	1. Состояния объектов. Верно ли они используются (в том числе, запись в удалённый объект)
	2. Выход за пределы границ объектов
	3. Документация ввода-вывода
	4. Работа с разными уровнями конфиденциальности и их ввод-вывод
	5. Для тайминг-атак: отсутствие условий, зависящих от высоких уровней конфиденциальности.
	6. Наличие лишних функций, которые не используются
	7. Правильная работа с копиями объектов (их верное обнуление и освобождение, в том числе)

	Подробнее см. файл "1.3.txt". Этот файл скопировать в директорию

